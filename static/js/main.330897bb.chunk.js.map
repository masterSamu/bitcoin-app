{"version":3,"sources":["functions/DateFunctions.js","components/DataCard.js","functions/PriceFunctions.js","components/Buttons/LoadingButton.js","components/DateSelection.js","components/ErrorCard.js","components/Footer.js","images/icon-duck.png","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["convertUnixTimestampToDate","unixTimestamp","Date","convertDateToUnixTimestamp","date","parseInt","getTime","toFixed","convertDateToString","toISOString","substring","DataCards","props","data","priceData","volumeData","totalVolumes","currency","cryptoCurrency","useState","decreasingDates","setDecreasingDates","lowestPrice","setLowestPrice","highestPrice","setHighestPrice","highestVolume","setHighestVolume","lowestPriceDate","setLowestPriceDate","highestPriceDate","setHighestPriceDate","useEffect","length","price","previousPrice","datesInRow","tempDatesInRow","previousDate","forEach","item","DateFunctions","getUTCDate","push","priceFunctions","bestBuyingDateObject","index","bestSellingDateObject","highestVolumeObject","tempVolume","isSameDate","volume","Card","style","cardStyle","Header","cardHeaderStyle","Title","cardTitleStyle","charAt","toUpperCase","slice","Body","cardBodyStyle","Row","Col","labelColStyle","labelStyle","valueColStyle","textAlign","fontSize","href","minWidth","maxWidth","width","padding","marginBottom","marginTop","backgroundColor","color","marginRight","display","justifyContent","LoadingButton","text","Button","type","variant","disabled","dateInputBtn","Spinner","animation","spinnerStyle","alignItems","height","borderColor","borderWidth","DateSelection","startDate","endDate","downloading","downloadingData","cardTextStyle","Form","dateFormRowStyle","onSubmit","e","preventDefault","downlaodHistoricalData","inputRowStyle","formColStyle","Label","Control","defaultValue","onChange","setStartDate","target","value","min","max","dateInputStyle","btnContainer","btnStyle","justfyContent","margin","flexWrap","wordWrap","ErrorCard","title","className","iconStyle","Text","flexDirection","Footer","Container","containerStyle","spanElementStyle","rel","Image","src","logo","iconImageStyle","fluid","h1Style","borderRadius","App","setCryptoCurrency","today","setDate","setEndDate","setDownloadingData","downloadError","setDownloadError","setPriceData","setTotalVolumes","setCurrency","dataLoaded","setDataLoaded","mainContainerStyle","dataContainer","fromDate","toDate","crypto","toLowerCase","url","axios","require","get","timeout","then","response","prices","total_volumes","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.330897bb.chunk.js","sourcesContent":["/**\r\n * Convert unix timestamp to date format\r\n * @param {Int} unixTimestamp \r\n * @returns Date\r\n */\r\nexport const convertUnixTimestampToDate = (unixTimestamp) => {\r\n  let date = new Date(unixTimestamp);\r\n  return date;\r\n};\r\n\r\n/**\r\n * Convert date to unix timestamp format.\r\n * @param {String} date\r\n * @returns int\r\n */\r\nexport const convertDateToUnixTimestamp = (date) => {\r\n  let unixTimestamp = parseInt((new Date(date).getTime() / 1000).toFixed(0));\r\n  return unixTimestamp;\r\n};\r\n\r\n/**\r\n * Get yesterdays date as a String.\r\n * @returns String \"yyy-MM-dd\"\r\n */\r\nexport const getYesterday = () => {\r\n  let today = new Date();\r\n  today.setDate(today.getUTCDate() -1)\r\n  return convertDateToString(today)\r\n};\r\n\r\n/**\r\n * Get day before yesterday as a String.\r\n * @returns String \"yyy-MM-dd\"\r\n */\r\n export const getDayBeforeYesterday = () => {\r\n  let today = new Date();\r\n  today.setDate(today.getUTCDate() -2)\r\n  return convertDateToString(today)\r\n};\r\n\r\n/**\r\n * Convert date to string format\r\n * @param {Date} date \r\n * @returns String \"yyyy-MM-dd\"\r\n */\r\nexport const convertDateToString = (date) => {\r\n  return date.toISOString().substring(0, 10);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as priceFunctions from \"../functions/PriceFunctions\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function DataCards(props) {\r\n  const data = props.priceData;\r\n  const volumeData = props.totalVolumes;\r\n  const currency = props.currency;\r\n  const cryptoCurrency = props.cryptoCurrency;\r\n  const [decreasingDates, setDecreasingDates] = useState([]);\r\n  const [lowestPrice, setLowestPrice] = useState({});\r\n  const [highestPrice, setHighestPrice] = useState({});\r\n  const [highestVolume, setHighestVolume] = useState({});\r\n  const [lowestPriceDate, setLowestPriceDate] = useState(null);\r\n  const [highestPriceDate, setHighestPriceDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      setDecreasingDates(priceFunctions.getMostDecreasingDatesInRow(data));\r\n      setLowestPrice(priceFunctions.getBestBuyingDate(data));\r\n      setHighestPrice(priceFunctions.getBestSellingDate(data));\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (volumeData.length > 0) {\r\n      setHighestVolume(priceFunctions.extractHighestVolume(volumeData));\r\n    }\r\n  }, [volumeData]);\r\n\r\n  useEffect(() => {\r\n    if (decreasingDates.length > 0) {\r\n      setLowestPriceDate(decreasingDates[0].date);\r\n      setHighestPriceDate(decreasingDates[decreasingDates.length - 1].date);\r\n    }\r\n  }, [decreasingDates]);\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Header style={cardHeaderStyle}>\r\n        <Card.Title style={cardTitleStyle}>\r\n          <h2>\r\n            {cryptoCurrency.charAt(0).toUpperCase() + cryptoCurrency.slice(1)}\r\n          </h2>\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body style={cardBodyStyle}>\r\n        <Row>\r\n          <h3>Decreased dates in row</h3>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Dates</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>{decreasingDates.length}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Start date</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>{lowestPriceDate}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>End date</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>{highestPriceDate}</span>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr></hr>\r\n        <Row>\r\n          <h3>Best buying point</h3>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Date</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>{lowestPrice.date}</span>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Price</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>\r\n              {lowestPrice.price} {currency}\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr></hr>\r\n        <Row>\r\n          <h3>Best selling point</h3>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Date</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>{highestPrice.date}</span>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Price</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>\r\n              {highestPrice.price} {currency}\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        <Row>\r\n          <h3>Highest trading volume</h3>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Date</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>{highestVolume.date}</span>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={labelColStyle}>\r\n            <label style={labelStyle}>Volume</label>\r\n          </Col>\r\n          <Col style={valueColStyle}>\r\n            <span style={labelStyle}>\r\n              {highestVolume.volume} {currency}\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{textAlign: \"center\", fontSize: \"0.7rem\"}}>\r\n          <p>Data is provided by <a href=\"https://www.coingecko.com/en/api\">CoinGecko</a></p>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst cardStyle = {\r\n  minWidth: \"260px\",\r\n  maxWidth: \"700px\",\r\n  width: \"100%\",\r\n  padding: 0,\r\n  marginBottom: 10,\r\n  marginTop: 10,\r\n};\r\n\r\nconst cardTitleStyle = {\r\n  fontSize: \"1.2rem\",\r\n};\r\n\r\nconst cardHeaderStyle = {\r\n  backgroundColor: \"#3d3d3d\",\r\n  color: \"#FFFFFF\",\r\n};\r\n\r\nconst labelStyle = {\r\n  fontSize: \"1.2rem\",\r\n  marginRight: \"1rem\",\r\n};\r\n\r\nconst cardBodyStyle = {\r\n  fontSize: \"1.2rem\",\r\n};\r\n\r\nconst labelColStyle = {\r\n  minWidth: \"90px\",\r\n  maxWidth: \"130px\",\r\n};\r\n\r\nconst valueColStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  padding: 0\r\n};\r\n","import * as DateFunctions from \"../functions/DateFunctions\";\r\n\r\n/**\r\n * Extracts decreasing (\"bearish\") dates in row from array and return\r\n * longest decreasing dates data.\r\n * @param {array} data\r\n * @returns array[{date: String, price: double}]\r\n */\r\nexport const getMostDecreasingDatesInRow = (data) => {\r\n  let datesInRow = [];\r\n  let tempDatesInRow = [];\r\n  let date, price, previousPrice;\r\n  let previousDate = new Date(0);\r\n\r\n  if (data.length > 0) {\r\n    previousPrice = data[0][1] + 1; // increase first price item by 1\r\n\r\n    data.forEach((item) => {\r\n      date = DateFunctions.convertUnixTimestampToDate(item[0]);\r\n      price = item[1];\r\n      const isSameDate = date.getUTCDate() === previousDate.getUTCDate();\r\n      const priceIsDecreasing = price < previousPrice;\r\n\r\n      if (!isSameDate) {\r\n        if (priceIsDecreasing) {\r\n          tempDatesInRow.push({\r\n            date: DateFunctions.convertDateToString(date),\r\n            price: price,\r\n          });\r\n          if (tempDatesInRow.length > datesInRow.length) {\r\n            datesInRow = tempDatesInRow;\r\n          }\r\n        } else {\r\n          tempDatesInRow = [];\r\n        }\r\n        previousPrice = price;\r\n      }\r\n      previousDate = date;\r\n    });\r\n  }\r\n\r\n  return datesInRow;\r\n}\r\n\r\n/**\r\n * \r\n * @param {array} data \r\n * @returns object {price: double, date: String}\r\n */\r\nexport const getBestBuyingDate = (data) => {\r\n  let lowestPrice;\r\n  let date = new Date(0);\r\n  let previousDate = new Date(0);\r\n  let bestBuyingDateObject = {};\r\n\r\n  data.forEach((item, index) => {\r\n    if (index === 0) lowestPrice = item[1] + 1;\r\n    let price = item[1];\r\n    date = DateFunctions.convertUnixTimestampToDate(item[0]);\r\n    const isSameDate = date.getUTCDate() === previousDate.getUTCDate();\r\n\r\n    if (!isSameDate && price < lowestPrice) {\r\n      bestBuyingDateObject = {\r\n        price: price.toFixed(2),\r\n        date: DateFunctions.convertDateToString(date),\r\n      };\r\n      lowestPrice = price;\r\n    }\r\n    previousDate = date;\r\n  });\r\n\r\n  return bestBuyingDateObject;\r\n};\r\n\r\n/**\r\n * @param {array} data \r\n * @returns object {price: double, date: String}\r\n */\r\nexport const getBestSellingDate = (data) => {\r\n  let highestPrice = 0;\r\n  let date = new Date(0);\r\n  let previousDate = new Date(0);\r\n  let bestSellingDateObject = {};\r\n\r\n  data.forEach((item) => {\r\n    let price = item[1];\r\n    date = DateFunctions.convertUnixTimestampToDate(item[0]);\r\n    const isSameDate = date.getUTCDate() === previousDate.getUTCDate();\r\n\r\n    if (!isSameDate && price > highestPrice) {\r\n      bestSellingDateObject = {\r\n        price: price.toFixed(2),\r\n        date: DateFunctions.convertDateToString(date),\r\n      };\r\n      highestPrice = price;\r\n    }\r\n    previousDate = date;\r\n  });\r\n\r\n  return bestSellingDateObject;\r\n};\r\n\r\n/**\r\n * \r\n * @param {array} data \r\n * @returns object {date: String, volume: int}\r\n */\r\nexport const extractHighestVolume = (data) => {\r\n  let highestVolumeObject = {};\r\n  let previousDate = new Date(0);\r\n  let highestVolume = 0;\r\n\r\n  data.forEach((item) => {\r\n    let tempVolume = item[1];\r\n    let date = DateFunctions.convertUnixTimestampToDate(item[0]);\r\n    const isSameDate = date.getUTCDate() === previousDate.getUTCDate();\r\n\r\n    if (tempVolume > highestVolume && !isSameDate) {\r\n      highestVolume = tempVolume;\r\n      highestVolumeObject = {\r\n        date: DateFunctions.convertDateToString(date),\r\n        volume: tempVolume.toFixed(0),\r\n      };\r\n    }\r\n    previousDate = date;\r\n  });\r\n  return highestVolumeObject;\r\n};\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport default function LoadingButton(props) {\r\n  const text = props.text;\r\n\r\n  return (\r\n    <Button type=\"submit\" variant=\"secondary\" disabled style={dateInputBtn}>\r\n      <Spinner\r\n        animation=\"border\"\r\n        style={spinnerStyle}\r\n        aria-label=\"loading icon\"\r\n      ></Spinner>\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nconst dateInputBtn = {\r\n  minWidth: \"120px\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  height: \"fit-content\",\r\n  backgroundColor: \"#FFFFFF\",\r\n  color: \"#000000\",\r\n  borderColor: \"#3d3d3d\",\r\n  borderWidth: 2\r\n};\r\n\r\nconst spinnerStyle = {\r\n  marginRight: 5,\r\n  height: 20,\r\n  width: 20,\r\n  fontSize: \"0.65rem\",\r\n  color: \"#3d3d3d\",\r\n}\r\n\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport LoadingButton from \"./Buttons/LoadingButton\";\r\n\r\nexport default function DateSelection(props) {\r\n  const startDate = props.startDate;\r\n  const endDate = props.endDate;\r\n  const downloading = props.downloadingData;\r\n\r\n  const handleStartDateChange = (e) => {\r\n    props.setStartDate(e.target.value);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    props.setStartDate(e.target.value);\r\n  };\r\n\r\n  const refreshData = (e) => {\r\n    e.preventDefault();\r\n    props.downlaodHistoricalData();\r\n  };\r\n\r\n  return (\r\n      <Card style={cardStyle}>\r\n        <Card.Header style={cardHeaderStyle}>\r\n          <h2>Select date range</h2>\r\n        </Card.Header>\r\n        <Card.Body style={cardTextStyle}>\r\n          <Form style={dateFormRowStyle} onSubmit={refreshData}>\r\n            <Row style={inputRowStyle}>\r\n              <Col style={formColStyle}>\r\n                <Form.Label style={labelStyle}>Start date:</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  defaultValue={startDate}\r\n                  onChange={handleStartDateChange}\r\n                  min=\"1970-01-01\"\r\n                  max={endDate}\r\n                  style={dateInputStyle}\r\n                />\r\n              </Col>\r\n              <Col style={formColStyle}>\r\n                <Form.Label style={labelStyle}>End date:</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  defaultValue={endDate}\r\n                  onChange={handleEndDateChange}\r\n                  min=\"1970-01-01\"\r\n                  max={endDate}\r\n                  style={dateInputStyle}\r\n                />\r\n              </Col>\r\n              <Col style={btnContainer}>\r\n                {downloading ? (\r\n                  <LoadingButton text=\"Loading\" />\r\n                ) : (\r\n                  <Button type=\"submit\" variant=\"secondary\" style={btnStyle}>\r\n                    Load\r\n                  </Button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n  );\r\n}\r\n\r\nconst cardStyle = {\r\n    minWidth: \"260px\",\r\n    maxWidth: \"700px\"\r\n}\r\nconst cardHeaderStyle = {\r\n  backgroundColor: \"#3d3d3d\",\r\n  color: \"#FFFFFF\",\r\n};\r\n\r\nconst inputRowStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\"\r\n};\r\n\r\nconst labelStyle = {\r\n  display: \"inline\",\r\n  marginRight: 5,\r\n  width: 90,\r\n};\r\n\r\nconst cardTextStyle = {\r\n  fontSize: \"1.2rem\",\r\n};\r\n\r\nconst dateFormRowStyle = {\r\n  display: \"flex\",\r\n  justfyContent: \"space-evenly\",\r\n};\r\n\r\nconst formColStyle = {\r\n  margin: 5,\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  flexWrap: \"wrap\",\r\n  wordWrap: \"no-wrap\"\r\n};\r\n\r\nconst btnContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"flex-end\",\r\n  margin: 5\r\n};\r\n\r\nconst dateInputStyle = {\r\n  width: \"175px\",\r\n  marginRight: 20,\r\n  display: \"inline\",\r\n  borderWidth: 2,\r\n  borderColor: \"#000000\",\r\n};\r\n\r\nconst btnStyle = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  color: \"#000000\",\r\n  borderColor: \"#3d3d3d\",\r\n  borderWidth: 2,\r\n  minWidth: \"120px\",\r\n}","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function ErrorCard(props) {\r\n  const title = props.title;\r\n  const text = props.text;\r\n\r\n  return (\r\n    <Card style={cardStyle}>\r\n      <Card.Header style={cardHeaderStyle}>\r\n        <i\r\n          className=\"bi bi-exclamation-triangle\"\r\n          style={iconStyle}\r\n        ></i>\r\n        <h2 style={cardTitleStyle}>{title}</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n            <Card.Text>{text}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst cardStyle = {\r\n  minWidth: \"260px\",\r\n  maxWidth: \"700px\",\r\n  padding: 0,\r\n  marginBottom: 10,\r\n  marginTop: 10,\r\n};\r\n\r\nconst cardTitleStyle = {\r\n  fontSize: \"1.6rem\",\r\n  marginBottom: 0,\r\n};\r\n\r\nconst iconStyle = {\r\n    fontSize: \"1.8rem\",\r\n    marginRight: 15,\r\n}\r\n\r\nconst cardHeaderStyle = {\r\n  backgroundColor: \"#3d3d3d\",\r\n  color: \"#FFFFFF\",\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-start\",\r\n};","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Container style={containerStyle}>\r\n      <span style={spanElementStyle}>\r\n        Background vector created by{\" \"}\r\n        <a\r\n          href=\"https://www.freepik.com/vectors/background\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          kjpargeter - www.freepik.com\r\n        </a>\r\n      </span>\r\n      <span style={spanElementStyle}>\r\n        Header duck icon made by{\" \"}\r\n        <a\r\n          href=\"https://www.freepik.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          title=\"Freepik\"\r\n        >\r\n          Freepik\r\n        </a>{\" \"}\r\n        from{\" \"}\r\n        <a\r\n          href=\"https://www.flaticon.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          title=\"Flaticon\"\r\n        >\r\n          www.flaticon.com\r\n        </a>\r\n      </span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst containerStyle = {\r\n  maxWidth: \"700px\",\r\n  minWidth: \"260px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  marginTop: 20,\r\n  marginBottom: 20,\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst spanElementStyle = {\r\n  marginBottom: 5,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/icon-duck.9a67c12c.png\";","import React from 'react'\r\nimport Image from \"react-bootstrap/Image\";\r\nimport logo from '../images/icon-duck.png';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <Container style={containerStyle}>\r\n            <Image src={logo} style={iconImageStyle} fluid />\r\n            <h1 style={h1Style}>Coin Tool</h1>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nconst containerStyle = {\r\n    minWidth: \"260px\",\r\n    maxWidth: \"700px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    marginBottom: 25,\r\n    marginTop: 15,\r\n    borderRadius: 20,\r\n}\r\n\r\nconst iconImageStyle = {\r\n    backgroundColor: \"#FFFFFF\",\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    marginRight: 30,\r\n    borderRadius: 20,\r\n}\r\n\r\nconst h1Style = {\r\n    fontSize: \"5vw\",\r\n}","import React, { useState, useEffect } from \"react\";\n\nimport * as DateFunctions from \"./functions/DateFunctions\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\n\nimport DataCard from \"./components/DataCard\";\nimport DateSelection from \"./components/DateSelection\";\nimport ErrorCard from \"./components/ErrorCard\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [cryptoCurrency, setCryptoCurrency] = useState(null);\n  const [startDate, setStartDate] = useState(\n    DateFunctions.getDayBeforeYesterday()\n  );\n  const [endDate, setEndDate] = useState(DateFunctions.getYesterday());\n  const [downloadingData, setDownloadingData] = useState(false);\n  const [downloadError, setDownloadError] = useState(false);\n  const [priceData, setPriceData] = useState([]);\n  const [totalVolumes, setTotalVolumes] = useState([]);\n  const [currency, setCurrency] = useState(null);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  useEffect(() => {\n    setCryptoCurrency(\"bitcoin\");\n    setCurrency(\"eur\");\n  }, []);\n\n  const downlaodHistoricalData = () => {\n    let fromDate = DateFunctions.convertDateToUnixTimestamp(startDate);\n    let toDate = DateFunctions.convertDateToUnixTimestamp(endDate) + 3600; //3600 = 1hour\n    let crypto = cryptoCurrency.toLowerCase();\n    let url = `https://api.coingecko.com/api/v3/coins/${crypto}/market_chart/range?vs_currency=${currency}&from=${fromDate}&to=${toDate}`;\n\n    const axios = require(\"axios\");\n    setDownloadingData(true);\n    axios\n      .get(url, {timeout: 15000})\n      .then(function (response) {\n        setPriceData(response.data.prices);\n        setTotalVolumes(response.data.total_volumes);\n        setDownloadError(false);\n      })\n      .catch(function (error) {\n        setDownloadError(true);\n      })\n      .then(function () {\n        setDownloadingData(false);\n        setDataLoaded(true);\n      });\n  };\n\n  return (\n    <>\n      <main>\n        <Container style={mainContainerStyle}>\n          <header>\n            <Header />\n          </header>\n          <Container style={dataContainer}>\n            <DateSelection\n              startDate={startDate}\n              endDate={endDate}\n              setStartDate={setStartDate}\n              setEndDate={setEndDate}\n              downloadingData={downloadingData}\n              downlaodHistoricalData={downlaodHistoricalData}\n            />\n          </Container>\n          <Container style={dataContainer}>\n            {dataLoaded ? (\n              <>\n                {downloadError ? (\n                  <ErrorCard\n                    title=\"Error\"\n                    text=\"Could not download the data, try again later.\"\n                  />\n                ) : (\n                  <DataCard\n                    priceData={priceData}\n                    startDate={startDate}\n                    endDate={endDate}\n                    currency={currency}\n                    totalVolumes={totalVolumes}\n                    cryptoCurrency={cryptoCurrency}\n                  />\n                )}\n              </>\n            ) : null}\n          </Container>\n        </Container>\n      </main>\n      <footer>\n        <Footer />\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n\nconst mainContainerStyle = {\n  padding: 0,\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n};\n\nconst dataContainer = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  marginBottom: 25,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}